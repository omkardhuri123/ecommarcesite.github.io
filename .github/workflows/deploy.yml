name: Deploy Flask App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
          FLASK_APP: app.py
          FLASK_ENV: production
          DB_HOST: 127.0.0.1
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DATABASE_URI: mysql+pymysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@127.0.0.1/${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    

    - name: Check MySQL Service Logs
      run: docker logs $(docker ps -q --filter "ancestor=mysql:8.0")

    - name: Install MySQL Client
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client  # Linux package manager [[3]]

    - name: Wait for MySQL service
      run: |
        until mysqladmin ping -h $DB_HOST --silent; do
          echo "Waiting for MySQL service..."
          sleep 5
        done

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install Frozen-Flask Flask-Migrate
        pip check

    - name: Initialize database
      run: |
        mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_NAME < database.sql
      # Removed Windows CMD syntax [[4]]

    - name: Run migrations
      run: |
        flask db upgrade

    - name: Seed database
      run: |
        python seed.py

    - name: Run tests
      run: |
        pytest

    - name: Freeze static files
      run: |
        flask freeze
      env:
        FREEZER_DESTINATION: ./build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
