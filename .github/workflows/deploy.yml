name: Deploy Flask App

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u$MYSQL_USER -p$MYSQL_PASSWORD"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      FLASK_APP: app.py
      FLASK_ENV: production
      DB_HOST: 127.0.0.1
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DATABASE_URI: mysql+pymysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:3306/${{ secrets.DB_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Workflow Environment
      run: |
        echo "Current directory:"
        pwd
        echo "Listing files:"
        ls -la

    - name: Configure MySQL credentials
      run: |
        echo "[client]
        user=$DB_USER
        password=$DB_PASSWORD
        host=127.0.0.1
        port=3306" > ~/.my.cnf
        chmod 600 ~/.my.cnf

    - name: Verify and prepare database files
      run: |
        if [ -f initialize.sql ]; then
          cp initialize.sql database.sql
        elif [ ! -f database.sql ]; then
          echo "Error: Neither database.sql nor initialize.sql found."
          exit 1
        fi

    - name: Check MySQL Service Logs
      run: docker logs $(docker ps -q --filter "ancestor=mysql:8.0")

    - name: Install MySQL Client
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client

    - name: Debug MySQL Connection
      run: mysqladmin ping || echo "MySQL connection failed"

    - name: Wait for MySQL service
      run: |
        until mysqladmin ping -h $DB_HOST --silent; do
          echo "Waiting for MySQL service..."
          sleep 5
        done

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install Frozen-Flask Flask-Migrate
        pip check

    - name: Initialize database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u $DB_USER -p$DB_PASSWORD $DB_NAME < database.sql
        python database.py

    - name: Run migrations
      run: |
        flask db upgrade

    - name: Seed database
      run: |
        python seed.py

    - name: Run tests with verbose output
      run: |
        pytest -v || echo "Tests failed"

    - name: Freeze static files
      run: |
        flask freeze
      env:
        FREEZER_DESTINATION: ./build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
