name: Deploy Flask App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: windows-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      FLASK_APP: app.py
      FLASK_ENV: production
      DB_HOST: localhost
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install MySQL Client
      run: |
        choco install mysql --version=8.0.26
        $env:PATH += ";C:\Program Files\MySQL\MySQL Server 9.2\bin\"
      shell: powershell

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install Frozen-Flask Flask-Migrate

    - name: Initialize database
      run: |
        mysql -h %DB_HOST% -u %DB_USER% -p%DB_PASSWORD% %DB_NAME% < schema.sql
      shell: cmd

    - name: Run migrations
      run: |
        flask db upgrade

    - name: Seed database
      run: |
        python seed.py

    - name: Run tests
      run: |
        pytest

    - name: Freeze static files
      run: |
        flask freeze
      env:
        FREEZER_DESTINATION: ./build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
